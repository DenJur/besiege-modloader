<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Commands Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Commands class" /><meta name="System.Keywords" content="spaar.ModLoader.Commands class" /><meta name="System.Keywords" content="Commands class, about Commands class" /><meta name="Microsoft.Help.F1" content="spaar.ModLoader.Commands" /><meta name="Microsoft.Help.Id" content="T:spaar.ModLoader.Commands" /><meta name="Description" content="Commands is used for all things regarding commands. Mainly, you can register your own commands and help messages here." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="spaar.ModLoader" /><meta name="file" content="T_spaar_ModLoader_Commands" /><meta name="guid" content="T_spaar_ModLoader_Commands" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">spaar's Mod Loader Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="1c8c0c25-81da-4934-b99a-ccc4f21c8d37.htm" title="spaar's Mod Loader Documentation" tocid="roottoc">spaar's Mod Loader Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_spaar_ModLoader.htm" title="spaar.ModLoader" tocid="N_spaar_ModLoader">spaar.ModLoader</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_spaar_ModLoader_Commands.htm" title="Commands Class" tocid="T_spaar_ModLoader_Commands">Commands Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_spaar_ModLoader_Commands.htm" title="Commands Properties" tocid="Properties_T_spaar_ModLoader_Commands">Commands Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_spaar_ModLoader_Commands.htm" title="Commands Methods" tocid="Methods_T_spaar_ModLoader_Commands">Commands Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn">Commands Class</td></tr></table><span class="introStyle"></span><div class="summary">
            Commands is used for all things regarding commands.
            Mainly, you can register your own commands and help messages here.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="http://msdn2.microsoft.com/en-us/library/e5kfa45b" target="_blank">System<span id="LST8CE8DA8B_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CE8DA8B_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">spaar.ModLoader<span id="LST8CE8DA8B_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST8CE8DA8B_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Commands</span><br /></div><p> </p><strong>Namespace:</strong> <a href="N_spaar_ModLoader.htm">spaar.ModLoader</a><br /><strong>Assembly:</strong> SpaarModLoader (in SpaarModLoader.dll) Version: 1.0.0.0 (1.0.0.0)<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Commands</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">Commands</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="P_spaar_ModLoader_Commands_History.htm">History</a></td><td><div class="summary">
            List of all executed commands.
            This returns a read-only list.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table id="memberList" class="members"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_spaar_ModLoader_Commands_DoesCommandExist.htm">DoesCommandExist</a></td><td><div class="summary">
            Checks whether a command currently exists (is registered).
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_spaar_ModLoader_Commands_HandleCommand.htm">HandleCommand</a></td><td><div class="summary">
            Handle an entered command.
            Arguments are parsed and then the callback corresponding to the command
            is called.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_spaar_ModLoader_Commands_RegisterCommand.htm">RegisterCommand</a></td><td><div class="summary">
            Register a console command.
            The passed callback will be called when the user enters the command in
            the console.
            If the same command was previously registered by the same mod,
            the old one will be updated instead of a new one being registered.
            </div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="M_spaar_ModLoader_Commands_RegisterHelpMessage.htm">RegisterHelpMessage</a></td><td><div class="summary">
            Register a help message for your mod to be displayed with the 'help' command.
            This should give a general overview, to give specific information about
            a command, use the <span class="code">helpText</span> parameter of <span class="code">RegisterCommand</span>.
            </div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID5RBSection" class="collapsibleSection">
            Commands can be entered in the console by the user.
            The command can be entered by itself if it is only registered once,
            if multiple mods registered the same command they are differentiated
            by entering &lt;modname&gt;:&lt;command&gt;.
            Commands can take two types of arguments: named arguments and unnamed
            arguments. Unnamed arguments are simply values entered on the console
            after the command, seperated by spaces.
            Named arguments follow this format: <span class="code">--name value</span>.
            </div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EANABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EANABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EANABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Commands.RegisterCommand(<span class="highlight-literal">"myCommand"</span>, MyCallback);</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EANABA");</script>
            An example implementation of the callback might looks like this:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EALABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EALABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EALABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">private</span> <span class="highlight-keyword">string</span> MyCallback(<span class="highlight-keyword">string</span>[] args,
IDictionary&lt;<span class="highlight-keyword">string</span>, <span class="highlight-keyword">string</span>&gt; namedArgs)
{
  <span class="highlight-keyword">if</span> (args.Length != <span class="highlight-number">2</span>)
  {
    <span class="highlight-keyword">return</span> <span class="highlight-literal">"Usage: myCommand &lt;param1&gt; &lt;param2&gt;"</span>;
  }
  <span class="highlight-keyword">return</span> <span class="highlight-literal">"You passed "</span> + args[<span class="highlight-number">0</span>] + <span class="highlight-literal">" and "</span> + args[<span class="highlight-number">1</span>];
}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EALABA");</script>
            Of course it is also possible to implement the callback as a lambda or
            anonymous delegate instead of a full function:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAJABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAJABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAJABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">Commands.RegisterCommand(<span class="highlight-literal">"myCommand"</span>, (args, namedArgs) =&gt;
{
  <span class="highlight-keyword">if</span> (args.Length != <span class="highlight-number">2</span>)
  {
    <span class="highlight-keyword">return</span> <span class="highlight-literal">"Usage: myCommand &lt;param1&gt; &lt;param2&gt;"</span>;
  }
  <span class="highlight-keyword">return</span> <span class="highlight-literal">"You passed "</span> + args[<span class="highlight-number">0</span>] + <span class="highlight-literal">" and "</span> + args[<span class="highlight-number">1</span>];
});</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAJABA");</script>
            Registers a new command called myCommand. This can then be used like this:
            <div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAHABA_copyCode" href="#" onclick="javascript:CopyToClipboard('ID1EAHABA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAHABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">myCommand arg1 <span class="highlight-literal">"second unnamed arg"</span> --namedArg1 value1 --namedArg2 <span class="highlight-literal">"second value"</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAHABA");</script>
            If called as above, <span class="code">args</span> passed to the callback will contain
            <span class="code">["arg1", "second unnamed arg"]</span>
            NamedArgs will contain the following mappings:
            <span class="code">"namedArg1" -&gt; "value1", "namedArg2" -&gt; "second value"</span>.
            </div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID7RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_spaar_ModLoader.htm">spaar.ModLoader Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>